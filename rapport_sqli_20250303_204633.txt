
==============================================
RAPPORT DE SCAN DE VULNÉRABILITÉS SQLi
==============================================
Date: 2025-03-03 20:46:33
Cible: http://testphp.vulnweb.com
URLs scannées: 11
Vulnérabilités trouvées: 10

VULNÉRABILITÉS DÉTECTÉES:

[1] Error-based SQLi
    URL: http://testphp.vulnweb.com
    Formulaire: http://testphp.vulnweb.com/search.php?test=query [Méthode: POST]
    Champ vulnérable: searchFor
    Payload efficace: ' OR '1'='1'--
    Détecté à: 2025-03-03 20:45:23

[2] Error-based SQLi
    URL: http://testphp.vulnweb.com/categories.php
    Formulaire: http://testphp.vulnweb.com/listproducts.php?cat=1 [Méthode: GET]
    Champ vulnérable: cat
    Payload efficace: ' OR '1'='1
    Détecté à: 2025-03-03 20:45:38

[3] Error-based SQLi
    URL: http://testphp.vulnweb.com/categories.php
    Formulaire: http://testphp.vulnweb.com/listproducts.php?cat=2 [Méthode: GET]
    Champ vulnérable: cat
    Payload efficace: ' OR '1'='1
    Détecté à: 2025-03-03 20:45:40

[4] Error-based SQLi
    URL: http://testphp.vulnweb.com/categories.php
    Formulaire: http://testphp.vulnweb.com/listproducts.php?cat=3 [Méthode: GET]
    Champ vulnérable: cat
    Payload efficace: ' OR '1'='1
    Détecté à: 2025-03-03 20:45:43

[5] Error-based SQLi
    URL: http://testphp.vulnweb.com/categories.php
    Formulaire: http://testphp.vulnweb.com/listproducts.php?cat=4 [Méthode: GET]
    Champ vulnérable: cat
    Payload efficace: ' OR '1'='1
    Détecté à: 2025-03-03 20:45:45

[6] Error-based SQLi
    URL: http://testphp.vulnweb.com/artists.php
    Formulaire: http://testphp.vulnweb.com/artists.php?artist=1 [Méthode: GET]
    Champ vulnérable: artist
    Payload efficace: ' OR '1'='1
    Détecté à: 2025-03-03 20:46:00

[7] Error-based SQLi
    URL: http://testphp.vulnweb.com/artists.php
    Formulaire: http://testphp.vulnweb.com/artists.php?artist=2 [Méthode: GET]
    Champ vulnérable: artist
    Payload efficace: ' OR '1'='1
    Détecté à: 2025-03-03 20:46:02

[8] Error-based SQLi
    URL: http://testphp.vulnweb.com/artists.php
    Formulaire: http://testphp.vulnweb.com/artists.php?artist=3 [Méthode: GET]
    Champ vulnérable: artist
    Payload efficace: ' OR '1'='1
    Détecté à: 2025-03-03 20:46:05

[9] Error-based SQLi
    URL: http://testphp.vulnweb.com/userinfo.php
    Formulaire: http://testphp.vulnweb.com/userinfo.php [Méthode: POST]
    Champ vulnérable: uname
    Payload efficace: ' OR '1'='1'--
    Détecté à: 2025-03-03 20:46:25

[10] Error-based SQLi
    URL: http://testphp.vulnweb.com/userinfo.php
    Formulaire: http://testphp.vulnweb.com/userinfo.php [Méthode: POST]
    Champ vulnérable: pass
    Payload efficace: ' OR '1'='1'--
    Détecté à: 2025-03-03 20:46:27

==============================================
RECOMMANDATIONS:
1. Utiliser des requêtes préparées ou des ORM
2. Valider et assainir toutes les entrées utilisateur
3. Implémenter un principe de moindre privilège pour les comptes DB
4. Activer les pare-feu applicatifs web (WAF)
==============================================
